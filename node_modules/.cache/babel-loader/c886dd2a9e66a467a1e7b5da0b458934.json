{"ast":null,"code":"var _jsxFileName = \"D:\\\\starwarclient\\\\src\\\\Databutton.js\";\nimport React from \"react\";\nimport \"./App.css\";\n\nclass Databutton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      if (!this.state.click) {\n        this.setState({\n          activeName: \"button\"\n        });\n        this.setState({\n          click: true\n        });\n      } else {\n        this.setState({\n          activeName: \"activeButton\"\n        });\n        this.setState({\n          click: false\n        });\n        this.apiCalls();\n      }\n    };\n\n    this.apiCalls = () => {\n      fetch(this.state.baseurl + \"/api/Films/getLongestCrawl\").then(res => res.json()).then(data => {\n        this.setState({\n          answer1: data\n        });\n      });\n      fetch(this.state.baseurl + \"/api/Persons/getMostActedPerson\").then(res => res.json()).then(data => {\n        this.setState({\n          answer2: data\n        });\n      });\n      fetch(this.state.baseurl + \"/api/Species/getMostNumberOfSpecies\").then(res => res.json()).then(data => {\n        this.setState({\n          answer3: data\n        });\n      });\n      fetch(this.state.baseurl + \"/api/Vechicle/getLargestNumberOfVechiclePilots\").then(res => res.json()).then(data => {\n        this.setState({\n          answer4: data\n        });\n      });\n    };\n\n    this.state = {\n      activeName: \"button\",\n      click: true,\n      answer1: \"\",\n      answer2: \"\",\n      answer3: [],\n      answer4: [],\n      baseurl: \"http://starwarapi-test.us-west-2.elasticbeanstalk.com/\"\n    };\n  } //click for assigning class for button and for showing data\n\n\n  //Html for button and data\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      onClick: e => this.handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: this.state.activeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-star leftAlign starSize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"centerText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Do. Or do not. There is no try\"), React.createElement(\"span\", {\n      className: \"fa fa-star rightAlign starSize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: !this.state.click ? \"questionClass\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Which of all StarWars movies has longest opening crawl?\"), React.createElement(\"p\", {\n      className: !this.state.click ? \"answerClass\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.answer1), React.createElement(\"p\", {\n      className: !this.state.click ? \"questionClass\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"What character (person) appeared in the most of StarWars films?\"), React.createElement(\"p\", {\n      className: !this.state.click ? \"answerClass\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.answer2), React.createElement(\"p\", {\n      className: !this.state.click ? \"questionClass\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Which species appeared in the most number of StarWars films?\"), React.createElement(\"div\", {\n      className: !this.state.click ? \"answerClass\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.answer3.map((answer, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, answer.Name, \" (\", answer.Count, \")\"))), React.createElement(\"p\", {\n      className: !this.state.click ? \"questionClass\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"What planet in StarWars universe provided largest number of vehicle pilots?\"), React.createElement(\"div\", {\n      className: !this.state.click ? \"answerClass\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.answer4.map((answer, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Planet: \", answer.PlanetName, \" - Pilots: (\", answer.Count, \")\"), answer.PilotNames.map((item, i) => {\n      return React.createElement(\"p\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" \", item.PilotName, \" - \", item.SpeciesName, \", \");\n    }))))));\n  }\n\n}\n\nexport default Databutton;","map":{"version":3,"sources":["D:/starwarclient/src/Databutton.js"],"names":["React","Databutton","Component","constructor","props","handleClick","state","click","setState","activeName","apiCalls","fetch","baseurl","then","res","json","data","answer1","answer2","answer3","answer4","render","e","map","answer","index","Name","Count","PlanetName","PilotNames","item","i","PilotName","SpeciesName"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nclass Databutton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeName: \"button\",\r\n            click: true,\r\n            answer1: \"\",\r\n            answer2: \"\",\r\n            answer3: [],\r\n            answer4: [],\r\n            baseurl:\"http://starwarapi-test.us-west-2.elasticbeanstalk.com/\"\r\n        }\r\n    }\r\n\r\n    //click for assigning class for button and for showing data\r\n    handleClick = () => {\r\n        if (!this.state.click) {\r\n            this.setState({ activeName: \"button\" });\r\n            this.setState({ click: true });\r\n        }\r\n        else {\r\n            this.setState({ activeName: \"activeButton\" });\r\n            this.setState({ click: false });\r\n            this.apiCalls();\r\n        }\r\n    }\r\n\r\n    //For calling api\r\n    apiCalls = () => {\r\n        fetch(\r\n             this.state.baseurl + \"/api/Films/getLongestCrawl\")\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ answer1: data })\r\n            })\r\n\r\n        fetch(\r\n            this.state.baseurl + \"/api/Persons/getMostActedPerson\")\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ answer2: data })\r\n            })\r\n\r\n        fetch(\r\n            this.state.baseurl + \"/api/Species/getMostNumberOfSpecies\")\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ answer3: data })\r\n            })\r\n\r\n        fetch(\r\n            this.state.baseurl + \"/api/Vechicle/getLargestNumberOfVechiclePilots\")\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({ answer4: data })\r\n            })\r\n    }\r\n\r\n    //Html for button and data\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"form-control\"\r\n                    onClick={(e) => this.handleClick()}>\r\n                    <button className={this.state.activeName}>\r\n                        <span className=\"fa fa-star leftAlign starSize\" />\r\n                        <span className=\"centerText\">Do. Or do not. There is no try</span>\r\n                        <span className=\"fa fa-star rightAlign starSize\" />\r\n                    </button>\r\n                    <p className={!this.state.click ? \"questionClass\" : \"hidden\"}>\r\n                        Which of all StarWars movies has longest opening crawl?\r\n                    </p>\r\n                    <p className={!this.state.click ? \"answerClass\" : \"hidden\"}>\r\n                        {this.state.answer1}\r\n                    </p>\r\n                    <p className={!this.state.click ? \"questionClass\" : \"hidden\"}>\r\n                        What character (person) appeared in the most of StarWars films?\r\n                    </p>\r\n                    <p className={!this.state.click ? \"answerClass\" : \"hidden\"}>\r\n                        {this.state.answer2}\r\n                    </p>\r\n                    <p className={!this.state.click ? \"questionClass\" : \"hidden\"}>\r\n                        Which species appeared in the most number of StarWars films?\r\n                    </p>\r\n                    <div className={!this.state.click ? \"answerClass\" : \"hidden\"}>\r\n                        {this.state.answer3.map((answer,index) => (\r\n                            <p key={index}>{answer.Name} ({answer.Count})</p>\r\n                        ))}\r\n                    </div>\r\n                    <p className={!this.state.click ? \"questionClass\" : \"hidden\"}>\r\n                        What planet in StarWars universe provided largest number of vehicle pilots?\r\n                    </p>\r\n                    <div className={!this.state.click ? \"answerClass\" : \"hidden\"}>\r\n                        {this.state.answer4.map((answer,index) => (\r\n                            <div key={index}><p>Planet: {answer.PlanetName} - Pilots: ({answer.Count})</p>\r\n                               {\r\n                                    answer.PilotNames.map((item,i) => {\r\n                                        return (<p key={i}> {item.PilotName} - {item.SpeciesName}, </p>)\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Databutton;"]},"metadata":{},"sourceType":"module"}